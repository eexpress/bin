#Perl内置变量的列表


_Created 星期二 08 十二月 2009_



$- 当前页可打印的行数,属于Perl格式系统的一部分

$! 根据上下文内容返回错误号或者错误串

$” 列表分隔符

$# 打印数字时默认的数字输出格式

$$ Perl解释器的进程ID

$% 当前输出通道的当前页号



**$` 在上个格式匹配信息前的字符串 **

**$& 与上个格式匹配的字符串 **

**$' 在上个格式匹配信息后的字符串 **





$( 当前进程的组ID

$) 当前进程的有效组ID

$* 设置1表示处理多行格式.现在多以/s和/m修饰符取代之.

$, 当前输出字段分隔符

$. 上次阅读的文件的当前输入行号

$/ 当前输入记录分隔符,默认情况是新行

$: 字符设置,此后的字符串将被分开,以填充连续的字段.

$; 在仿真多维数组时使用的分隔符.

**$? 返回上一个外部命令的状态 **

$@ Perl解释器从eval语句返回的错误消息

$[ 数组中第一个元素的索引号

$\ 当前输出记录的分隔符

$] Perl解释器的子版本号

$^ 当前通道最上面的页面输出格式名字

$^A 打印前用于保存格式化数据的变量

$^D调试标志的值

$^E在非UNIX环境中的操作系统扩展错误信息

$^F最大的文件捆述符数值

$^H由编译器激活的语法检查状态

$^I内置控制编辑器的值

$^L发送到输出通道的走纸换页符

$^M备用内存池的大小

**$^O操作系统名 **

$^P指定当前调试值的内部变量

$^R正则表达式块的上次求值结果

$^S当前解释器状态

**$^T**从新世纪开始算起,脚步本以秒计算的开始运行的时间

$^W警告开关的当前值

$^X Perl二进制可执行代码的名字

**$_ 默认的输入/输出和格式匹配空间 包括while(<>)文件读入的时候**

$| 控制对当前选择的输出文件句柄的缓冲

$~ 当前报告格式的名字

$+ 与上个正则表达式搜索格式匹配的最后一个括号

$< 当前执行解释器的用户的真实ID

**$<digits>含有与上个匹配正则表达式对应括号结果 **

$= 当前页面可打印行的数目

$> 当前进程的有效用户ID

**$0 包含正在执行的脚本的文件名 **

$ ARGV 从默认的文件句柄中读取时的当前文件名

**%ENV 环境变量列表**

%INC 通过do或require包含的文件列表

%SIG 信号列表及其处理方式

**@_ 传给子程序的参数列表 **

**@ARGV 传给脚本的命令行参数列表**

@INC 在导入模块时需要搜索的目录列表

**@F 缺省数组**，**空白**是缺省的分离符号，可以使用-F指定其他分离符。


```
例子，交换2列数据。

逗号分割，用-F强制分割的，可以不用-a

▶ perl  -F, -ple '$_ = join ",", @F[2,0,1]' note

空白分割，要使用-a

▶ perl -plae '$_ = join ",", @F[2,0,1]' note
```


##修饰词	含义

/i	忽略字母大小写

/m	多行。令 ^ 和 $ 匹配随后嵌入的 \n。

/s	单行。令 . 匹配换行符并且忽略废弃了的 $*。

/x	忽略(大多数)空白并且允许在模式里的注释

/o	只编译模式一次

/g	全局地查找所有匹配

/cg	在 /g 匹配失败后允许继续查找

